import { Component, Inject, OnInit, ViewChild  } from '@angular/core';
import { FormBuilder } from '@angular/forms';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { FormGroup, FormControl } from '@angular/forms';
import { EventEmitter } from '@angular/core';
import {MatSort, MatTableDataSource} from '@angular/material';
import { NosiocipService } from './nosiocip.service';
import { Validators } from "@angular/forms";
import {MatSelectModule} from '@angular/material/select';

@Component({
  selector: 'app-nosiocip',
  templateUrl: './nosiocip.component.html',
  styleUrls: ['./nosiocip.component.css']
})
export class NosiocipComponent implements OnInit {

    displayedColumns: string[] = [ 'matbr', 'ime',  'adresa',  'grad',  'drzava', 'tipnp', 'brisi'];
    nosiocp = null;
    dataSource = new MatTableDataSource(this.nosiocp);
    @ViewChild('sort', {static: true}) sort: MatSort;
    
    isUpdate = false;

    constructor( private nosiocipService: NosiocipService, 
    private formBuilder: FormBuilder) {}
    
    checkoutForm = this.formBuilder.group({
        pnid: '',
        oznaka: '',
        naziv: '',
        aktivnost: ''
    });

  ngOnInit() {
    this.getNosiocip();
  }

  afterInit(){
        this.dataSource.data = this.nosiocp;
        this.dataSource.sort = this.sort;
  }

  getNosiocip(){
    this.nosiocipService.getNosiocip().subscribe(result => { this.nosiocp = result; this.afterInit(); });
  }
  

  onSubmit(customerData) {
    console.warn('Your order has been submitted', JSON.stringify(customerData));
    if (this.isUpdate) {
        this.nosiocipService.sendDataToServer(customerData, this.isUpdate).subscribe(result => { this.getNosiocip();});
    
    } else {
      customerData.pnid=1;
        this.nosiocipService.sendDataToServer(customerData, this.isUpdate).subscribe(result => { this.getNosiocip();});
   
    }
    this.checkoutForm.reset();
    this.isUpdate = false;
}

  
  update(customerData) {
      this.isUpdate = true;
      this.checkoutForm = this.formBuilder.group(customerData);
    }

  delete(pnid) {
     this.nosiocipService.delete(pnid).subscribe(result => {this.getNosiocip(); });
  }

  

}
